<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>k8s on zoux的博客</title>
    <link>https://zoux86.github.io/tags/k8s/</link>
    <description>Recent content in k8s on zoux的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 15 Dec 2019 01:31:20 +0800</lastBuildDate><atom:link href="https://zoux86.github.io/tags/k8s/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>k8s的基本组件</title>
      <link>https://zoux86.github.io/post/2019-12-15-k8s%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%BB%84%E4%BB%B6/</link>
      <pubDate>Sun, 15 Dec 2019 01:31:20 +0800</pubDate>
      
      <guid>https://zoux86.github.io/post/2019-12-15-k8s%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%BB%84%E4%BB%B6/</guid>
      <description>toc=true 目录 （1）k8s简介 （2）k8s组件介绍 背景简介 Docker 项目和容器技术目前还是非常火热，但是Docker 技术栈，有自己的局限性，这是它的出发点决定的。那么在docker层之上，例如 容器编排？调度？容器云？集群管理？这些事情就需要另外一个项目来解决了。 在我最开始接触k8s的时候，我看到</description>
    </item>
    
    <item>
      <title>k8s源码学习 - Scheduler笔记（1）</title>
      <link>https://zoux86.github.io/post/2019-11-24-k8s%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0-scheduler%E7%AC%94%E8%AE%B01/</link>
      <pubDate>Sun, 21 Apr 2019 20:31:20 +0800</pubDate>
      
      <guid>https://zoux86.github.io/post/2019-11-24-k8s%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0-scheduler%E7%AC%94%E8%AE%B01/</guid>
      <description>任务：找到scheduler的入口 k8s 代码目录结构 cmd：所有的二进制可执行文件入口代码，也就是各种命令的接口代码。 pkg：项目diamante主目录，cmd只是接口，这里是具体实现。cmd类似业务代码，pkg类似核心 寻找k8s入口函数 1 2 3 4 5 6 cmd/kube-schedule</description>
    </item>
    
    <item>
      <title>k8s源码学习 - Scheduler笔记（2）</title>
      <link>https://zoux86.github.io/post/2019-11-24-k8s%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0-scheduler%E7%AC%94%E8%AE%B02/</link>
      <pubDate>Sun, 21 Apr 2019 20:31:20 +0800</pubDate>
      
      <guid>https://zoux86.github.io/post/2019-11-24-k8s%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0-scheduler%E7%AC%94%E8%AE%B02/</guid>
      <description>接上文的工作，上文是找到了scheduler的入口。接下来看scheduler具体的执行。 1 2 3 4 5 cmd/kube-scheduler/scheduler.go:34main函数-&amp;gt; cmd/kube-scheduler/app/server.go:70NewSchedulerCommand-&amp;gt; cmd/kube-scheduler/app/server.go:117runCommand-&amp;gt; cmd/kube-scheduler/app/server.go:167Run-&amp;gt; pkg/scheduler/scheduler.go:276run-&amp;gt; 这是上文的工作 1 2 pkg/scheduler/scheduler.go:501scheduleOne-&amp;gt; pkg/scheduler/scheduler.go:291schedule-&amp;gt; 这里schedule只是一个街口，定义在 schedule/a</description>
    </item>
    
    <item>
      <title>k8s源码学习--代码结构</title>
      <link>https://zoux86.github.io/post/2019-11-24-k8s%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0-%E4%BB%A3%E7%A0%81%E7%BB%93%E6%9E%84/</link>
      <pubDate>Sun, 21 Apr 2019 20:31:20 +0800</pubDate>
      
      <guid>https://zoux86.github.io/post/2019-11-24-k8s%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0-%E4%BB%A3%E7%A0%81%E7%BB%93%E6%9E%84/</guid>
      <description>k8s版本：v1.13 k8s代码的结构 api: 输出接口文档用，基本是json源码 build：构建脚本 cmd：所有的二进制可执行文件入口代码，也就是各种命令的接口代码。 pkg：项目diamante主目录，cmd只是接口，这里是具体实现。cmd类似业务代码，pkg类似核心 plugin：插件</description>
    </item>
    
    <item>
      <title>k8s集群安装helm</title>
      <link>https://zoux86.github.io/post/2019-11-24-k8s%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85helm/</link>
      <pubDate>Mon, 01 Apr 2019 20:31:20 +0800</pubDate>
      
      <guid>https://zoux86.github.io/post/2019-11-24-k8s%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85helm/</guid>
      <description>helm介绍 helm的作用： Kubernetes一个包管理引擎 tiller的作用：功能和软件仓库一样，类似于/etc/yum.repos.d目录下的xxx.repo。 安装helm的目的是为了后面安装kube-batch 环境说明 环境：4台ubuntu16.04 1个master 3个n</description>
    </item>
    
    <item>
      <title>ubuntu搭建k8s机器</title>
      <link>https://zoux86.github.io/post/2019-11-24-%E6%90%AD%E5%BB%BAk8s%E9%9B%86%E7%BE%A4/</link>
      <pubDate>Tue, 05 Mar 2019 20:31:20 +0800</pubDate>
      
      <guid>https://zoux86.github.io/post/2019-11-24-%E6%90%AD%E5%BB%BAk8s%E9%9B%86%E7%BE%A4/</guid>
      <description>本次在搭建k8s集群的过程中，遇到了很多问题，幸好最后终于成功。故将整个过程记录下来，希望对大家有所帮助。 环境说明 环境：4台ubuntu16.04 1个master 3个node k8s版本：V1.13.2 搭建说明 本教程采用kubeadm的方式安装，主要针对的是国内用户，因为安装k8s</description>
    </item>
    
    <item>
      <title>ubuntu机器之间免密登录</title>
      <link>https://zoux86.github.io/post/2019-11-24-ubuntu%E6%9C%BA%E5%99%A8%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95/</link>
      <pubDate>Mon, 05 Nov 2018 20:31:20 +0800</pubDate>
      
      <guid>https://zoux86.github.io/post/2019-11-24-ubuntu%E6%9C%BA%E5%99%A8%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95/</guid>
      <description>在自己动手搭建k8s集群环境之前，经常遇到的一个问题就是，集群机器之间能互相免密登录。故在此记录整个搭建过程。 假设有俩台机器： 192.168.115.70 zx-1 master 192.168.115.66 zx-2 现在要修改成密码登录，并且这俩台机器免密登录。步骤如下： 修改 etc/hosts zx-1机器上 127.0.0.1 localhost zx-1 192.168.14.70 zx-1 192.168.14.66 zx-2 zx-2机器上 127.0.0.1 localhost zx-2 192.168.14.70 zx-1 192.168.14.66 zx-2 修改登录密码 修改root密</description>
    </item>
    
  </channel>
</rss>
