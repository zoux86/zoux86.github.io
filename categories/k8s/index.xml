<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>k8s on zoux的博客</title>
    <link>https://zoux86.github.io/categories/k8s/</link>
    <description>Recent content in k8s on zoux的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 15 Dec 2019 01:31:20 +0800</lastBuildDate>
    
	<atom:link href="https://zoux86.github.io/categories/k8s/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>k8s的基本组件</title>
      <link>https://zoux86.github.io/post/2019-12-15-k8s%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%BB%84%E4%BB%B6/</link>
      <pubDate>Sun, 15 Dec 2019 01:31:20 +0800</pubDate>
      
      <guid>https://zoux86.github.io/post/2019-12-15-k8s%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%BB%84%E4%BB%B6/</guid>
      <description>目录 （1）k8s简介 （2）k8s组件介绍 背景简介 Docker 项目和容器技术目前还是非常火热，但是Docker 技术栈，有自己的局限性，这是它的出发点决定的。那么在docker层之上，例如 容器编排？调度？容器云？集群管理？这些事情就需要另外一个项目来解决了。 在我最开始接触k8s的时候，我看到的</description>
    </item>
    
    <item>
      <title>k8s源码学习 - Scheduler笔记（1）</title>
      <link>https://zoux86.github.io/post/2019-11-24-k8s%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0-scheduler%E7%AC%94%E8%AE%B01/</link>
      <pubDate>Sun, 21 Apr 2019 20:31:20 +0800</pubDate>
      
      <guid>https://zoux86.github.io/post/2019-11-24-k8s%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0-scheduler%E7%AC%94%E8%AE%B01/</guid>
      <description>任务：找到scheduler的入口 k8s 代码目录结构 cmd：所有的二进制可执行文件入口代码，也就是各种命令的接口代码。 pkg：项目diamante主目录，cmd只是接口，这里是具体实现。cmd类似业务代码，pkg类似核心 寻找k8s入口函数 cmd/kube-scheduler/scheduler.go:34 main函数 -&amp;gt; cmd/kube-scheduler/app/server.go:70 NewSchedulerCommand-&amp;gt; cmd/kube-scheduler/app/server.go:117 runCommand -&amp;gt; cmd/kube-scheduler/app/server.go:167 Run -&amp;gt; pkg/scheduler/scheduler.go:276 run (cmd/kube-scheduler/scheduler.go:34 表示cm</description>
    </item>
    
    <item>
      <title>k8s源码学习 - Scheduler笔记（2）</title>
      <link>https://zoux86.github.io/post/2019-11-24-k8s%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0-scheduler%E7%AC%94%E8%AE%B02/</link>
      <pubDate>Sun, 21 Apr 2019 20:31:20 +0800</pubDate>
      
      <guid>https://zoux86.github.io/post/2019-11-24-k8s%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0-scheduler%E7%AC%94%E8%AE%B02/</guid>
      <description>接上文的工作，上文是找到了scheduler的入口。接下来看scheduler具体的执行。 cmd/kube-scheduler/scheduler.go:34 main函数 -&amp;gt; cmd/kube-scheduler/app/server.go:70 NewSchedulerCommand-&amp;gt; cmd/kube-scheduler/app/server.go:117 runCommand -&amp;gt; cmd/kube-scheduler/app/server.go:167 Run -&amp;gt; pkg/scheduler/scheduler.go:276 run -&amp;gt; 这是上文的工作 pkg/scheduler/scheduler.go:501 scheduleOne -&amp;gt; pkg/scheduler/scheduler.go:291 schedule-&amp;gt; 这里schedule只是一个街口，定义在 schedule/algorithm/interface中 pkg/scheduler/core/generic_scheduler.go:139 Schedule （这一步是参考的，我具体是</description>
    </item>
    
    <item>
      <title>k8s源码学习--代码结构</title>
      <link>https://zoux86.github.io/post/2019-11-24-k8s%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0-%E4%BB%A3%E7%A0%81%E7%BB%93%E6%9E%84/</link>
      <pubDate>Sun, 21 Apr 2019 20:31:20 +0800</pubDate>
      
      <guid>https://zoux86.github.io/post/2019-11-24-k8s%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0-%E4%BB%A3%E7%A0%81%E7%BB%93%E6%9E%84/</guid>
      <description>k8s版本：v1.13 k8s代码的结构 api: 输出接口文档用，基本是json源码 build：构建脚本 cmd：所有的二进制可执行文件入口代码，也就是各种命令的接口代码。 pkg：项目diamante主目录，cmd只是接口，这里是具体实现。cmd类似业务代码，pkg类似核心 plugin：插件</description>
    </item>
    
  </channel>
</rss>